name: "Build and Release"

on:
  push:
    branches:
      - release
  workflow_dispatch:
    inputs:
      version:
        description: "Version to release (e.g., 0.1.3)"
        required: true
        type: string
      app_version:
        description: "App version from tauri.conf.json (e.g., 0.1.3)"
        required: true
        type: string

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: "macos-latest"
            args: "--target aarch64-apple-darwin"
            artifact_suffix: "aarch64"
          - platform: "macos-latest"
            args: "--target x86_64-apple-darwin"
            artifact_suffix: "x86_64"
          - platform: "ubuntu-22.04"
            args: ""
            artifact_suffix: "linux"
          - platform: "windows-latest"
            args: ""
            artifact_suffix: "windows"
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4
        with:
          repository: dominara-team/dominara-dev

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Install dependencies (Ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Install frontend dependencies
        run: npm install

      - name: Build with Tauri (no release creation)
        uses: tauri-apps/tauri-action@v0
        env:
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          args: ${{ matrix.args }}
          includeUpdaterJson: true
          # No creamos release aqu√≠, solo generamos artefactos

      - name: Upload artifacts to dominara
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASES_TOKEN }}
        run: |
          ARTIFACT_PATHS=$(find src-tauri/target -type f \( -name "*.dmg" -o -name "*.app.tar.gz" -o -name "*.sig" -o -name "*.deb" -o -name "*.AppImage" -o -name "*.msi" \))
          if [ -n "$ARTIFACT_PATHS" ]; then
            gh release upload "v__VERSION__" $ARTIFACT_PATHS --repo dominara-team/dominara
          else
            echo "No artifacts found to upload"
            exit 1
          fi
        if: ${{ github.event_name == 'workflow_dispatch' }}

  create-release:
    if: ${{ github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    needs: publish-tauri
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          repository: dominara-team/dominara
          token: ${{ secrets.RELEASES_TOKEN }}

      - name: Create Release in dominara
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASES_TOKEN }}
        run: |
          git tag "v__VERSION__"
          git push origin "v__VERSION__"
          gh release create "v__VERSION__" \
            --title "Dominara v__VERSION__" \
            --notes "See the assets to download this version and install." \
            --draft=false \
            --prerelease=false \
            --repo dominara-team/dominara
